State 1 conflicts: 1 shift/reduce
State 4 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 167 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 170 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 178 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 193 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input line

    3 line: exp EQUAL END
    4     | many_ends comment many_ends program many_ends comment many_ends

    5 statement: var ASSIGN exp comment many_ends
    6          | IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment many_ends many_statements comment many_ends ENDIF comment many_ends
    8          | WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends
    9          | DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   10          | comment many_ends READ many_vars comment many_ends
   11          | comment many_ends WRITE many_vars comment many_ends
   12          | comment many_ends CONTINUE comment many_ends
   13          | comment many_ends RETURN exp comment many_ends

   14 many_statements: comment many_ends
   15                | statement SEMICOLON comment many_ends many_statements comment many_ends

   16 many_vars: var
   17          | var COMMA many_vars

   18 program: function
   19        | function program

   20 term: var
   21     | UMINUS var
   22     | NUMBER
   23     | UMINUS NUMBER
   24     | L_PAREN exp R_PAREN
   25     | UMINUS L_PAREN exp R_PAREN
   26     | ident L_PAREN many_exp R_PAREN

   27 many_exp: exp
   28         | exp COMMA many_exp

   29 many_ident: ident
   30           | ident COMMA many_ident

   31 many_ends: /* empty */
   32          | END many_ends

   33 many_declaration: comment many_ends
   34                 | declaration SEMICOLON comment many_ends many_declaration comment many_ends

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

   36 declaration: many_ident COLON INTEGER
   37            | many_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   38 bool_expr: relation_and_expr
   39          | relation_and_expr OR relation_and_expr

   40 relation_and_expr: relation_expr
   41                  | relation_expr AND relation_and_expr

   42 relation_expr: exp comp exp
   43              | L_PAREN bool_expr R_PAREN
   44              | TRUE
   45              | FALSE
   46              | NOT exp comp exp
   47              | NOT L_PAREN bool_expr R_PAREN
   48              | NOT TRUE
   49              | NOT FALSE

   50 var: ident
   51    | ident L_SQUARE_BRACKET exp R_SQUARE_BRACKET

   52 ident: IDENT

   53 comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 exp: multexp
   60    | multexp PLUS exp
   61    | multexp MINUS exp

   62 multexp: term
   63        | term MULT multexp
   64        | term DIV multexp
   65        | term MOD multexp

   66 comment: /* empty */
   67        | comment many_ends COMMENT


Terminals, with rules where they appear

$end (0) 0
error (256)
MULT (258) 63
DIV (259) 64
PLUS (260) 60
MINUS (261) 61
EQUAL (262) 3
L_PAREN (263) 24 25 26 43 47
R_PAREN (264) 24 25 26 43 47
L_SQUARE_BRACKET (265) 37 51
R_SQUARE_BRACKET (266) 37 51
NOT (267) 46 47 48 49
END (268) 3 32
EQ (269) 53
NEQ (270) 54
LT (271) 55
GT (272) 56
LTE (273) 57
GTE (274) 58
SEMICOLON (275) 15 34 35
COLON (276) 36 37
COMMA (277) 17 28 30
ASSIGN (278) 5
TRUE (279) 44 48
FALSE (280) 45 49
RETURN (281) 13
MOD (282) 65
AND (283) 41
CONTINUE (284) 12
READ (285) 10
WRITE (286) 11
INTEGER (287) 36 37
OF (288) 37
ARRAY (289) 37
OR (290) 39
COMMENT (291) 67
NUMBER (292) 22 23 37
IDENT (293) 52
UMINUS (294) 21 23 25
BEGIN_LOCALS (295) 35
END_LOCALS (296) 35
BEGIN_BODY (297) 35
END_BODY (298) 35
BEGIN_PARAMS (299) 35
END_PARAMS (300) 35
FUNCTION (301) 35
DO (302) 9
BEGINLOOP (303) 8 9
ENDLOOP (304) 8 9
WHILE (305) 8 9
IF (306) 6 7
THEN (307) 6 7
ENDIF (308) 6 7
ELSE (309) 6


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1 2, on right: 0 2
line (57)
    on left: 3 4, on right: 2
statement (58)
    on left: 5 6 7 8 9 10 11 12 13, on right: 15
many_statements (59)
    on left: 14 15, on right: 6 7 8 9 15 35
many_vars (60)
    on left: 16 17, on right: 10 11 17
program (61)
    on left: 18 19, on right: 4 19
term (62)
    on left: 20 21 22 23 24 25 26, on right: 62 63 64 65
many_exp (63)
    on left: 27 28, on right: 26 28
many_ident (64)
    on left: 29 30, on right: 30 36 37
many_ends (65)
    on left: 31 32, on right: 4 5 6 7 8 9 10 11 12 13 14 15 32 33 34
    35 67
many_declaration (66)
    on left: 33 34, on right: 34 35
function (67)
    on left: 35, on right: 18 19
declaration (68)
    on left: 36 37, on right: 34
bool_expr (69)
    on left: 38 39, on right: 6 7 8 9 43 47
relation_and_expr (70)
    on left: 40 41, on right: 38 39 41
relation_expr (71)
    on left: 42 43 44 45 46 47 48 49, on right: 40 41
var (72)
    on left: 50 51, on right: 5 16 17 20 21
ident (73)
    on left: 52, on right: 26 29 30 35 50 51
comp (74)
    on left: 53 54 55 56 57 58, on right: 42 46
exp (75)
    on left: 59 60 61, on right: 3 5 13 24 25 27 28 42 46 51 60 61
multexp (76)
    on left: 62 63 64 65, on right: 59 60 61 63 64 65
comment (77)
    on left: 66 67, on right: 4 5 6 7 8 9 10 11 12 13 14 15 33 34 67


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . line

    $end     shift, and go to state 2
    L_PAREN  shift, and go to state 3
    END      shift, and go to state 4
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    line       go to state 8
    term       go to state 9
    many_ends  go to state 10
    var        go to state 11
    ident      go to state 12
    exp        go to state 13
    multexp    go to state 14


state 2

    0 $accept: input $end .

    $default  accept


state 3

   24 term: L_PAREN . exp R_PAREN

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 15
    multexp  go to state 14


state 4

   32 many_ends: END . many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 16


state 5

   22 term: NUMBER .

    $default  reduce using rule 22 (term)


state 6

   52 ident: IDENT .

    $default  reduce using rule 52 (ident)


state 7

   21 term: UMINUS . var
   23     | UMINUS . NUMBER
   25     | UMINUS . L_PAREN exp R_PAREN

    L_PAREN  shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 6

    var    go to state 19
    ident  go to state 20


state 8

    2 input: input line .

    $default  reduce using rule 2 (input)


state 9

   62 multexp: term .
   63        | term . MULT multexp
   64        | term . DIV multexp
   65        | term . MOD multexp

    MULT  shift, and go to state 21
    DIV   shift, and go to state 22
    MOD   shift, and go to state 23

    $default  reduce using rule 62 (multexp)


state 10

    4 line: many_ends . comment many_ends program many_ends comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 24


state 11

   20 term: var .

    $default  reduce using rule 20 (term)


state 12

   26 term: ident . L_PAREN many_exp R_PAREN
   50 var: ident .
   51    | ident . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 25
    L_SQUARE_BRACKET  shift, and go to state 26

    $default  reduce using rule 50 (var)


state 13

    3 line: exp . EQUAL END

    EQUAL  shift, and go to state 27


state 14

   59 exp: multexp .
   60    | multexp . PLUS exp
   61    | multexp . MINUS exp

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29

    $default  reduce using rule 59 (exp)


state 15

   24 term: L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 30


state 16

   32 many_ends: END many_ends .

    $default  reduce using rule 32 (many_ends)


state 17

   25 term: UMINUS L_PAREN . exp R_PAREN

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 31
    multexp  go to state 14


state 18

   23 term: UMINUS NUMBER .

    $default  reduce using rule 23 (term)


state 19

   21 term: UMINUS var .

    $default  reduce using rule 21 (term)


state 20

   50 var: ident .
   51    | ident . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 26

    $default  reduce using rule 50 (var)


state 21

   63 multexp: term MULT . multexp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    multexp  go to state 32


state 22

   64 multexp: term DIV . multexp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    multexp  go to state 33


state 23

   65 multexp: term MOD . multexp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    multexp  go to state 34


state 24

    4 line: many_ends comment . many_ends program many_ends comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 35


state 25

   26 term: ident L_PAREN . many_exp R_PAREN

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term      go to state 9
    many_exp  go to state 36
    var       go to state 11
    ident     go to state 12
    exp       go to state 37
    multexp   go to state 14


state 26

   51 var: ident L_SQUARE_BRACKET . exp R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 38
    multexp  go to state 14


state 27

    3 line: exp EQUAL . END

    END  shift, and go to state 39


state 28

   60 exp: multexp PLUS . exp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 40
    multexp  go to state 14


state 29

   61 exp: multexp MINUS . exp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 41
    multexp  go to state 14


state 30

   24 term: L_PAREN exp R_PAREN .

    $default  reduce using rule 24 (term)


state 31

   25 term: UMINUS L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 42


state 32

   63 multexp: term MULT multexp .

    $default  reduce using rule 63 (multexp)


state 33

   64 multexp: term DIV multexp .

    $default  reduce using rule 64 (multexp)


state 34

   65 multexp: term MOD multexp .

    $default  reduce using rule 65 (multexp)


state 35

    4 line: many_ends comment many_ends . program many_ends comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT   shift, and go to state 43
    FUNCTION  shift, and go to state 44

    program   go to state 45
    function  go to state 46


state 36

   26 term: ident L_PAREN many_exp . R_PAREN

    R_PAREN  shift, and go to state 47


state 37

   27 many_exp: exp .
   28         | exp . COMMA many_exp

    COMMA  shift, and go to state 48

    $default  reduce using rule 27 (many_exp)


state 38

   51 var: ident L_SQUARE_BRACKET exp . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 49


state 39

    3 line: exp EQUAL END .

    $default  reduce using rule 3 (line)


state 40

   60 exp: multexp PLUS exp .

    $default  reduce using rule 60 (exp)


state 41

   61 exp: multexp MINUS exp .

    $default  reduce using rule 61 (exp)


state 42

   25 term: UMINUS L_PAREN exp R_PAREN .

    $default  reduce using rule 25 (term)


state 43

   67 comment: comment many_ends COMMENT .

    $default  reduce using rule 67 (comment)


state 44

   35 function: FUNCTION . ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    IDENT  shift, and go to state 6

    ident  go to state 50


state 45

    4 line: many_ends comment many_ends program . many_ends comment many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 51


state 46

   18 program: function .
   19        | function . program

    FUNCTION  shift, and go to state 44

    FUNCTION  [reduce using rule 18 (program)]
    $default  reduce using rule 18 (program)

    program   go to state 52
    function  go to state 46


state 47

   26 term: ident L_PAREN many_exp R_PAREN .

    $default  reduce using rule 26 (term)


state 48

   28 many_exp: exp COMMA . many_exp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term      go to state 9
    many_exp  go to state 53
    var       go to state 11
    ident     go to state 12
    exp       go to state 37
    multexp   go to state 14


state 49

   51 var: ident L_SQUARE_BRACKET exp R_SQUARE_BRACKET .

    $default  reduce using rule 51 (var)


state 50

   35 function: FUNCTION ident . SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    SEMICOLON  shift, and go to state 54


state 51

    4 line: many_ends comment many_ends program many_ends . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 55


state 52

   19 program: function program .

    $default  reduce using rule 19 (program)


state 53

   28 many_exp: exp COMMA many_exp .

    $default  reduce using rule 28 (many_exp)


state 54

   35 function: FUNCTION ident SEMICOLON . many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 56


state 55

    4 line: many_ends comment many_ends program many_ends comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 57


state 56

   35 function: FUNCTION ident SEMICOLON many_ends . BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    BEGIN_PARAMS  shift, and go to state 58


state 57

    4 line: many_ends comment many_ends program many_ends comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    COMMENT   [reduce using rule 4 (line)]
    $default  reduce using rule 4 (line)


state 58

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS . many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 59


state 59

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends . many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    IDENT  shift, and go to state 6

    $default  reduce using rule 66 (comment)

    many_ident        go to state 60
    many_declaration  go to state 61
    declaration       go to state 62
    ident             go to state 63
    comment           go to state 64


state 60

   36 declaration: many_ident . COLON INTEGER
   37            | many_ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 65


state 61

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration . END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END_PARAMS  shift, and go to state 66


state 62

   34 many_declaration: declaration . SEMICOLON comment many_ends many_declaration comment many_ends

    SEMICOLON  shift, and go to state 67


state 63

   29 many_ident: ident .
   30           | ident . COMMA many_ident

    COMMA  shift, and go to state 68

    $default  reduce using rule 29 (many_ident)


state 64

   33 many_declaration: comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 69


state 65

   36 declaration: many_ident COLON . INTEGER
   37            | many_ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 70
    ARRAY    shift, and go to state 71


state 66

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS . many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 72


state 67

   34 many_declaration: declaration SEMICOLON . comment many_ends many_declaration comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 73


state 68

   30 many_ident: ident COMMA . many_ident

    IDENT  shift, and go to state 6

    many_ident  go to state 74
    ident       go to state 63


state 69

   33 many_declaration: comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    COMMENT   [reduce using rule 33 (many_declaration)]
    $default  reduce using rule 33 (many_declaration)


state 70

   36 declaration: many_ident COLON INTEGER .

    $default  reduce using rule 36 (declaration)


state 71

   37 declaration: many_ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 75


state 72

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends . BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    BEGIN_LOCALS  shift, and go to state 76


state 73

   34 many_declaration: declaration SEMICOLON comment . many_ends many_declaration comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 77


state 74

   30 many_ident: ident COMMA many_ident .

    $default  reduce using rule 30 (many_ident)


state 75

   37 declaration: many_ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 78


state 76

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS . many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 79


state 77

   34 many_declaration: declaration SEMICOLON comment many_ends . many_declaration comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    many_ident        go to state 60
    many_declaration  go to state 80
    declaration       go to state 62
    ident             go to state 63
    comment           go to state 64


state 78

   37 declaration: many_ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 81


state 79

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends . many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    IDENT  shift, and go to state 6

    $default  reduce using rule 66 (comment)

    many_ident        go to state 60
    many_declaration  go to state 82
    declaration       go to state 62
    ident             go to state 63
    comment           go to state 64


state 80

   34 many_declaration: declaration SEMICOLON comment many_ends many_declaration . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 83


state 81

   37 declaration: many_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 84


state 82

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration . many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 85


state 83

   34 many_declaration: declaration SEMICOLON comment many_ends many_declaration comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 86


state 84

   37 declaration: many_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 87


state 85

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends . END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END_LOCALS  shift, and go to state 88


state 86

   34 many_declaration: declaration SEMICOLON comment many_ends many_declaration comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    COMMENT   [reduce using rule 34 (many_declaration)]
    $default  reduce using rule 34 (many_declaration)


state 87

   37 declaration: many_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 37 (declaration)


state 88

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS . many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 89


state 89

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends . BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends

    BEGIN_BODY  shift, and go to state 90


state 90

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY . many_ends many_statements many_ends END_BODY many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 91


state 91

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends . many_statements many_ends END_BODY many_ends

    IDENT  shift, and go to state 6
    DO     shift, and go to state 92
    WHILE  shift, and go to state 93
    IF     shift, and go to state 94

    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 96
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 92

    9 statement: DO . comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 99


state 93

    8 statement: WHILE . bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    bool_expr          go to state 104
    relation_and_expr  go to state 105
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 107
    multexp            go to state 14


state 94

    6 statement: IF . bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF . bool_expr THEN comment many_ends many_statements comment many_ends ENDIF comment many_ends

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    bool_expr          go to state 108
    relation_and_expr  go to state 105
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 107
    multexp            go to state 14


state 95

   15 many_statements: statement . SEMICOLON comment many_ends many_statements comment many_ends

    SEMICOLON  shift, and go to state 109


state 96

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements . many_ends END_BODY many_ends

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 110


state 97

    5 statement: var . ASSIGN exp comment many_ends

    ASSIGN  shift, and go to state 111


state 98

   10 statement: comment . many_ends READ many_vars comment many_ends
   11          | comment . many_ends WRITE many_vars comment many_ends
   12          | comment . many_ends CONTINUE comment many_ends
   13          | comment . many_ends RETURN exp comment many_ends
   14 many_statements: comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 112


state 99

    9 statement: DO comment . many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 113


state 100

   24 term: L_PAREN . exp R_PAREN
   43 relation_expr: L_PAREN . bool_expr R_PAREN

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    bool_expr          go to state 114
    relation_and_expr  go to state 105
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 115
    multexp            go to state 14


state 101

   46 relation_expr: NOT . exp comp exp
   47              | NOT . L_PAREN bool_expr R_PAREN
   48              | NOT . TRUE
   49              | NOT . FALSE

    L_PAREN  shift, and go to state 116
    TRUE     shift, and go to state 117
    FALSE    shift, and go to state 118
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 119
    multexp  go to state 14


state 102

   44 relation_expr: TRUE .

    $default  reduce using rule 44 (relation_expr)


state 103

   45 relation_expr: FALSE .

    $default  reduce using rule 45 (relation_expr)


state 104

    8 statement: WHILE bool_expr . comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 120


state 105

   38 bool_expr: relation_and_expr .
   39          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 121

    $default  reduce using rule 38 (bool_expr)


state 106

   40 relation_and_expr: relation_expr .
   41                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 122

    $default  reduce using rule 40 (relation_and_expr)


state 107

   42 relation_expr: exp . comp exp

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    LT   shift, and go to state 125
    GT   shift, and go to state 126
    LTE  shift, and go to state 127
    GTE  shift, and go to state 128

    comp  go to state 129


state 108

    6 statement: IF bool_expr . THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr . THEN comment many_ends many_statements comment many_ends ENDIF comment many_ends

    THEN  shift, and go to state 130


state 109

   15 many_statements: statement SEMICOLON . comment many_ends many_statements comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 131


state 110

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends . END_BODY many_ends

    END_BODY  shift, and go to state 132


state 111

    5 statement: var ASSIGN . exp comment many_ends

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 133
    multexp  go to state 14


state 112

   10 statement: comment many_ends . READ many_vars comment many_ends
   11          | comment many_ends . WRITE many_vars comment many_ends
   12          | comment many_ends . CONTINUE comment many_ends
   13          | comment many_ends . RETURN exp comment many_ends
   14 many_statements: comment many_ends .
   67 comment: comment many_ends . COMMENT

    RETURN    shift, and go to state 134
    CONTINUE  shift, and go to state 135
    READ      shift, and go to state 136
    WRITE     shift, and go to state 137
    COMMENT   shift, and go to state 43

    COMMENT   [reduce using rule 14 (many_statements)]
    $default  reduce using rule 14 (many_statements)


state 113

    9 statement: DO comment many_ends . BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT    shift, and go to state 43
    BEGINLOOP  shift, and go to state 138


state 114

   43 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 139


state 115

   24 term: L_PAREN exp . R_PAREN
   42 relation_expr: exp . comp exp

    R_PAREN  shift, and go to state 30
    EQ       shift, and go to state 123
    NEQ      shift, and go to state 124
    LT       shift, and go to state 125
    GT       shift, and go to state 126
    LTE      shift, and go to state 127
    GTE      shift, and go to state 128

    comp  go to state 129


state 116

   24 term: L_PAREN . exp R_PAREN
   47 relation_expr: NOT L_PAREN . bool_expr R_PAREN

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    bool_expr          go to state 140
    relation_and_expr  go to state 105
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 115
    multexp            go to state 14


state 117

   48 relation_expr: NOT TRUE .

    $default  reduce using rule 48 (relation_expr)


state 118

   49 relation_expr: NOT FALSE .

    $default  reduce using rule 49 (relation_expr)


state 119

   46 relation_expr: NOT exp . comp exp

    EQ   shift, and go to state 123
    NEQ  shift, and go to state 124
    LT   shift, and go to state 125
    GT   shift, and go to state 126
    LTE  shift, and go to state 127
    GTE  shift, and go to state 128

    comp  go to state 141


state 120

    8 statement: WHILE bool_expr comment . many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 142


state 121

   39 bool_expr: relation_and_expr OR . relation_and_expr

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    relation_and_expr  go to state 143
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 107
    multexp            go to state 14


state 122

   41 relation_and_expr: relation_expr AND . relation_and_expr

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    relation_and_expr  go to state 144
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 107
    multexp            go to state 14


state 123

   53 comp: EQ .

    $default  reduce using rule 53 (comp)


state 124

   54 comp: NEQ .

    $default  reduce using rule 54 (comp)


state 125

   55 comp: LT .

    $default  reduce using rule 55 (comp)


state 126

   56 comp: GT .

    $default  reduce using rule 56 (comp)


state 127

   57 comp: LTE .

    $default  reduce using rule 57 (comp)


state 128

   58 comp: GTE .

    $default  reduce using rule 58 (comp)


state 129

   42 relation_expr: exp comp . exp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 145
    multexp  go to state 14


state 130

    6 statement: IF bool_expr THEN . comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN . comment many_ends many_statements comment many_ends ENDIF comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 146


state 131

   15 many_statements: statement SEMICOLON comment . many_ends many_statements comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 147


state 132

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY . many_ends

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 148


state 133

    5 statement: var ASSIGN exp . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 149


state 134

   13 statement: comment many_ends RETURN . exp comment many_ends

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 150
    multexp  go to state 14


state 135

   12 statement: comment many_ends CONTINUE . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 151


state 136

   10 statement: comment many_ends READ . many_vars comment many_ends

    IDENT  shift, and go to state 6

    many_vars  go to state 152
    var        go to state 153
    ident      go to state 20


state 137

   11 statement: comment many_ends WRITE . many_vars comment many_ends

    IDENT  shift, and go to state 6

    many_vars  go to state 154
    var        go to state 153
    ident      go to state 20


state 138

    9 statement: DO comment many_ends BEGINLOOP . comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 155


state 139

   43 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 43 (relation_expr)


state 140

   47 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 156


state 141

   46 relation_expr: NOT exp comp . exp

    L_PAREN  shift, and go to state 3
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term     go to state 9
    var      go to state 11
    ident    go to state 12
    exp      go to state 157
    multexp  go to state 14


state 142

    8 statement: WHILE bool_expr comment many_ends . BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT    shift, and go to state 43
    BEGINLOOP  shift, and go to state 158


state 143

   39 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 39 (bool_expr)


state 144

   41 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 41 (relation_and_expr)


state 145

   42 relation_expr: exp comp exp .

    $default  reduce using rule 42 (relation_expr)


state 146

    6 statement: IF bool_expr THEN comment . many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment . many_ends many_statements comment many_ends ENDIF comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 159


state 147

   15 many_statements: statement SEMICOLON comment many_ends . many_statements comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6
    DO       shift, and go to state 92
    WHILE    shift, and go to state 93
    IF       shift, and go to state 94

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 160
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 148

   35 function: FUNCTION ident SEMICOLON many_ends BEGIN_PARAMS many_ends many_declaration END_PARAMS many_ends BEGIN_LOCALS many_ends many_declaration many_ends END_LOCALS many_ends BEGIN_BODY many_ends many_statements many_ends END_BODY many_ends .

    $default  reduce using rule 35 (function)


state 149

    5 statement: var ASSIGN exp comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 161


state 150

   13 statement: comment many_ends RETURN exp . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 162


state 151

   12 statement: comment many_ends CONTINUE comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 163


state 152

   10 statement: comment many_ends READ many_vars . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 164


state 153

   16 many_vars: var .
   17          | var . COMMA many_vars

    COMMA  shift, and go to state 165

    $default  reduce using rule 16 (many_vars)


state 154

   11 statement: comment many_ends WRITE many_vars . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 166


state 155

    9 statement: DO comment many_ends BEGINLOOP comment . many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 167


state 156

   47 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 47 (relation_expr)


state 157

   46 relation_expr: NOT exp comp exp .

    $default  reduce using rule 46 (relation_expr)


state 158

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP . comment many_ends many_statements comment many_ends ENDLOOP comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 168


state 159

    6 statement: IF bool_expr THEN comment many_ends . many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment many_ends . many_statements comment many_ends ENDIF comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6
    DO       shift, and go to state 92
    WHILE    shift, and go to state 93
    IF       shift, and go to state 94

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 169
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 160

   15 many_statements: statement SEMICOLON comment many_ends many_statements . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 170


state 161

    5 statement: var ASSIGN exp comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 5 (statement)


state 162

   13 statement: comment many_ends RETURN exp comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 171


state 163

   12 statement: comment many_ends CONTINUE comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 12 (statement)


state 164

   10 statement: comment many_ends READ many_vars comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 172


state 165

   17 many_vars: var COMMA . many_vars

    IDENT  shift, and go to state 6

    many_vars  go to state 173
    var        go to state 153
    ident      go to state 20


state 166

   11 statement: comment many_ends WRITE many_vars comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 174


state 167

    9 statement: DO comment many_ends BEGINLOOP comment many_ends . many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6
    DO       shift, and go to state 92
    WHILE    shift, and go to state 93
    IF       shift, and go to state 94

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 175
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 168

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment . many_ends many_statements comment many_ends ENDLOOP comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 176


state 169

    6 statement: IF bool_expr THEN comment many_ends many_statements . comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment many_ends many_statements . comment many_ends ENDIF comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 177


state 170

   15 many_statements: statement SEMICOLON comment many_ends many_statements comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 178


state 171

   13 statement: comment many_ends RETURN exp comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 13 (statement)


state 172

   10 statement: comment many_ends READ many_vars comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 10 (statement)


state 173

   17 many_vars: var COMMA many_vars .

    $default  reduce using rule 17 (many_vars)


state 174

   11 statement: comment many_ends WRITE many_vars comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 11 (statement)


state 175

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements . comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 179


state 176

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends . many_statements comment many_ends ENDLOOP comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6
    DO       shift, and go to state 92
    WHILE    shift, and go to state 93
    IF       shift, and go to state 94

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 180
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 177

    6 statement: IF bool_expr THEN comment many_ends many_statements comment . many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment many_ends many_statements comment . many_ends ENDIF comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 181


state 178

   15 many_statements: statement SEMICOLON comment many_ends many_statements comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    COMMENT   [reduce using rule 15 (many_statements)]
    $default  reduce using rule 15 (many_statements)


state 179

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment . many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 182


state 180

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements . comment many_ends ENDLOOP comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 183


state 181

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends . ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends
    7          | IF bool_expr THEN comment many_ends many_statements comment many_ends . ENDIF comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    ENDIF    shift, and go to state 184
    ELSE     shift, and go to state 185


state 182

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends . ENDLOOP comment many_ends WHILE bool_expr comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    ENDLOOP  shift, and go to state 186


state 183

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment . many_ends ENDLOOP comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 187


state 184

    7 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ENDIF . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 188


state 185

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE . comment many_ends many_statements comment many_ends ENDIF comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 189


state 186

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP . comment many_ends WHILE bool_expr comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 190


state 187

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends . ENDLOOP comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    ENDLOOP  shift, and go to state 191


state 188

    7 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ENDIF comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 192


state 189

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment . many_ends many_statements comment many_ends ENDIF comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    END       [reduce using rule 31 (many_ends)]
    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 193


state 190

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment . many_ends WHILE bool_expr comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 194


state 191

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 195


state 192

    7 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ENDIF comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 7 (statement)


state 193

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends . many_statements comment many_ends ENDIF comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    IDENT    shift, and go to state 6
    DO       shift, and go to state 92
    WHILE    shift, and go to state 93
    IF       shift, and go to state 94

    COMMENT   [reduce using rule 66 (comment)]
    $default  reduce using rule 66 (comment)

    statement        go to state 95
    many_statements  go to state 196
    var              go to state 97
    ident            go to state 20
    comment          go to state 98


state 194

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends . WHILE bool_expr comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    WHILE    shift, and go to state 197


state 195

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 198


state 196

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements . comment many_ends ENDIF comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 199


state 197

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE . bool_expr comment many_ends

    L_PAREN  shift, and go to state 100
    NOT      shift, and go to state 101
    TRUE     shift, and go to state 102
    FALSE    shift, and go to state 103
    NUMBER   shift, and go to state 5
    IDENT    shift, and go to state 6
    UMINUS   shift, and go to state 7

    term               go to state 9
    bool_expr          go to state 200
    relation_and_expr  go to state 105
    relation_expr      go to state 106
    var                go to state 11
    ident              go to state 12
    exp                go to state 107
    multexp            go to state 14


state 198

    8 statement: WHILE bool_expr comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 8 (statement)


state 199

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment . many_ends ENDIF comment many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 201


state 200

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 202


state 201

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends . ENDIF comment many_ends
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43
    ENDIF    shift, and go to state 203


state 202

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 204


state 203

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF . comment many_ends

    $default  reduce using rule 66 (comment)

    comment  go to state 205


state 204

    9 statement: DO comment many_ends BEGINLOOP comment many_ends many_statements comment many_ends ENDLOOP comment many_ends WHILE bool_expr comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 9 (statement)


state 205

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment . many_ends
   67 comment: comment . many_ends COMMENT

    END  shift, and go to state 4

    $default  reduce using rule 31 (many_ends)

    many_ends  go to state 206


state 206

    6 statement: IF bool_expr THEN comment many_ends many_statements comment many_ends ELSE comment many_ends many_statements comment many_ends ENDIF comment many_ends .
   67 comment: comment many_ends . COMMENT

    COMMENT  shift, and go to state 43

    $default  reduce using rule 6 (statement)
